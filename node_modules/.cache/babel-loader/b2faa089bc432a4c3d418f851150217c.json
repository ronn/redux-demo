{"ast":null,"code":"import { Todo } from \"../model/Todo\";\nexport const searchTodos = () => fetch('https://jsonplaceholsder.typicode.com/todos').then(response => response.json()).then(jsonTodos => jsonTodos.map(jt => new Todo(jt.userId, jt.id, jt.title, jt.completed)));","map":{"version":3,"sources":["/home/ronn/ronn/redux-demo/src/todo/modules/todos.js"],"names":["Todo","searchTodos","fetch","then","response","json","jsonTodos","map","jt","userId","id","title","completed"],"mappings":"AAAA,SAAQA,IAAR,QAAmB,eAAnB;AAEA,OAAO,MAAMC,WAAW,GAAG,MACvBC,KAAK,CAAC,6CAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,SAAS,IACXA,SAAS,CAACC,GAAV,CAAcC,EAAE,IAAI,IAAIR,IAAJ,CAChBQ,EAAE,CAACC,MADa,EAEhBD,EAAE,CAACE,EAFa,EAGhBF,EAAE,CAACG,KAHa,EAIhBH,EAAE,CAACI,SAJa,CAApB,CAHR,CADG","sourcesContent":["import {Todo} from \"../model/Todo\";\n\nexport const searchTodos = () =>\n    fetch('https://jsonplaceholsder.typicode.com/todos')\n        .then(response => response.json())\n        .then(jsonTodos =>\n            jsonTodos.map(jt => new Todo(\n                jt.userId,\n                jt.id,\n                jt.title,\n                jt.completed\n            ))\n        )"]},"metadata":{},"sourceType":"module"}